#!/bin/sh
DAYBOOK_DIR="${DAYBOOK_DIR-$HOME/daybook}"
DAYBOOK_TITLE="${DAYBOOK_TITLE-Diary}"
DAYBOOK_AUTHOR="${DAYBOOK_AUTHOR-$(getent passwd "$USER" | cut -d: -f5 | cut -d, -f1)}"
DAYBOOK_AUTHOR="${DAYBOOK_AUTHOR-$USER}"
DAYBOOK_PROGRAM_NAME=daybook

fail() {
  echo "$1" >/dev/stderr
  exit 1
}

require_EDITOR() {
  test "$EDITOR" || fail "$DAYBOOK_PROGRAM_NAME: EDITOR not set. Aborting."
}

require_pandoc() {
  command -v pandoc >/dev/null || fail "$DAYBOOK_PROGRAM_NAME: pandoc not found. Aborting."
}

print_entry_date() {
  file="$(basename "$1")"
  echo "${file%.*}"
}

print_title_block() {
  echo % "$DAYBOOK_TITLE"
  echo % "$DAYBOOK_AUTHOR"
  echo % "$(print_entry_date "$(ls -t1 "$DAYBOOK_DIR" | head -n 1)")"
}

daybook_add() {
  require_EDITOR
  "$EDITOR" "$DAYBOOK_DIR/$(date +%F).md"
}

daybook_show() {
  require_pandoc
  (
    print_title_block
    for entry in "$DAYBOOK_DIR"/????-??-??.md; do
      echo "# $(print_entry_date "$entry")"
      cat "$entry"
      echo
    done
  ) | pandoc - -s -V section="$USER" -t man | man -l -
}

daybook_render() {
  require_pandoc
  [ $# -eq 1 ] || fail "usage: $DAYBOOK_PROGRAM_NAME render <target>"
  (
    print_title_block
    for entry in "$DAYBOOK_DIR"/????-??-??.md; do
      echo "\\marginpar{$(print_entry_date "$entry")}\\noindent"
      cat "$entry"
      echo "\\medskip"
    done
  ) | pandoc - -V documentclass=book -V fontfamily=lmodern -V indent -s -o "$1"
}

case "${1-}" in
  add)
    daybook_add;;
  show)
    daybook_show;;
  render)
    shift
    daybook_render "$@";;
  -h|--help)
    man "$DAYBOOK_PROGRAM_NAME";;
  *)
    fail "usage: $DAYBOOK_PROGRAM_NAME add|show|render"
esac
